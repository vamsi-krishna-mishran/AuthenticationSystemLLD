// <auto-generated />
using System;
using BlogSystem.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogSystem.Migrations
{
    [DbContext(typeof(BlogDbContext))]
    [Migration("20240609071723_added blog")]
    partial class addedblog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.20");

            modelBuilder.Entity("BlogSystem.Models.Address", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("doorNo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("zipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("address");
                });

            modelBuilder.Entity("BlogSystem.Models.Blog", b =>
                {
                    b.Property<int>("blogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("adminIdid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("blogDocument")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("blogHeading")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("blogThumbnailImg")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("publishDate")
                        .HasColumnType("TEXT");

                    b.HasKey("blogId");

                    b.HasIndex("adminIdid");

                    b.ToTable("blog");
                });

            modelBuilder.Entity("BlogSystem.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("addressid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("userType")
                        .HasColumnType("INTEGER");

                    b.HasKey("id");

                    b.HasIndex("addressid");

                    b.HasIndex("userName")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("BlogSystem.Models.Blog", b =>
                {
                    b.HasOne("BlogSystem.Models.User", "adminId")
                        .WithMany()
                        .HasForeignKey("adminIdid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("adminId");
                });

            modelBuilder.Entity("BlogSystem.Models.User", b =>
                {
                    b.HasOne("BlogSystem.Models.Address", "address")
                        .WithMany()
                        .HasForeignKey("addressid");

                    b.Navigation("address");
                });
#pragma warning restore 612, 618
        }
    }
}
